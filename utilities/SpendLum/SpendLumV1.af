~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid tostring[wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey listadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/ftaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

STATE: {Default} ~~ {
	IF: Always
		DO:	DoAll
				DoExpr {echo[`Spend luminance meta by Sun Invictus`,15]}
				DoExpr {echo[`This meta uses fellowship chat to report info`,15]}
				SetState {Settings}		
~~ }
STATE: {Settings} ~~ {
	IF:	Always
		DO:	DoAll
				DoExpr {vtsetsetting[NavCloseStopRange,`0.00625`]} ~~ 1.5
				DoExpr {vtsetsetting[EnableBuffing,`0`]}
				DoExpr {vtsetsetting[EnableCombat,`0`]}
				DoExpr {vtsetsetting[EnableNav,`1`]}
				DoExpr {vtsetsetting[IdlePeaceMode,`1`]}
				DoExpr {vtsetsetting[EnableLooting,`1`]}
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}	
				DoExpr {vtsetsetting[OpenDoors,`1`]}
				DoExpr {vtsetsetting[AttackDistance,`0.025`]} ~~ 6
				DoExpr {vtsetsetting[ApproachDistance,`0.0208333`]} ~~ 5	
				DoExpr {setvar[regLumLookup,dictcreate[`1`,100000,`2`,150000,`3`,200000,`4`,250000,`5`,300000,`6`,9999999]]}
				DoExpr {setvar[seerLumLookup,dictcreate[`1`,100000,`2`,150000,`3`,200000,`4`,250000,`5`,300000,`6`,350000,`7`,400000,`8`,450000,`9`,500000,`10`,550000,`11`,9999999]]}
				DoExpr {setvar[worldLumLookup,dictcreate[`1`,100000,`2`,200000,`3`,300000,`4`,400000,`5`,500000,`6`,600000,`7`,700000,`8`,800000,`9`,900000,`10`,1000000,`11`,9999999]]}
				DoExpr {setvar[specLumLookup,dictcreate[`1`,350000,`2`,400000,`3`,450000,`4`,500000,`5`,550000,`6`,9999999]]}
				
				~~ list of Nalicana luminance aura tokens, the order of this list must match states below
				DoExpr {setvar[tokenList,listcreate[`Token of the Aura of Valor`,`Token of the Aura of Protection`,`Token of the Aura of Glory`,`Token of the Aura of Temperance`,`Token of the Aura of Aetheric Vision`,`Token of the Aura of Mana Flow`,`Token of the Aura of Mana Infusion`,`Token of the Aura of Purity`,`Token of the Aura of the Craftsman`,`Specialization`,`Token of the Aura of the World`]]}
	IF: Expr {testquestflag[loyaltoliamofgelid]}
		DO: DoAll
				Chat {/f I am loyal to Liam of Gelid}
	IF: Expr {testquestflag[loyaltoshadeofladyadja]}
		DO: DoAll
				Chat {/f I am loyal to Lady Adja}
	IF: Expr {testquestflag[loyaltolordtyragar]}
		DO: DoAll
				Chat {/f I am loyal to Lord Tyragar}
	IF: Expr {testquestflag[loyaltokahiri]}
		DO: DoAll
				Chat {/f I am loyal to Ka'hiri}
	IF: All
			Expr {testquestflag[loyaltoliamofgelid]==0}
			Expr {testquestflag[loyaltoshadeofladyadja]==0}
			Expr {testquestflag[loyaltolordtyragar]==0}
			Expr {testquestflag[loyaltokahiri]==0}
		DO: Chat {/f I am not currently loyal to any Seer}
	IF: SecsInStateGE 3
		DO: SetState {Begin}				
~~ }
STATE: {Begin} ~~ {
	IF: Always
		DO: CallState {AssessPlayer} {RecordLumAuraCosts}
~~ }
STATE: {AssessPlayer} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {echo[`Assessing player to get current luminance value...`,15]}
				DoExpr {setvar[assesstime,floor[getunixtime[]]]}
				DoExpr {wobjectrequestdata[wobjectgetplayer[]]}
	IF: All
			Expr {wobjecthasdata[wobjectgetplayer[]]==1}
			Expr {wobjectlastidtime[wobjectgetplayer[]]>=getvar[assesstime]}
		DO: Return
~~ }
STATE: {RecordLumAuraCosts} ~~ {
	~~ create a list and record the cost for each of the next luminance aura
	~~ the order of this list matters and must match token list
	
	IF: Always
		DO: DoExpr {setvar[currentLum,listcreate[]]}
	
	~~ valor/destruction 333
	IF: Any
			Expr {testquestflag[loyaltoliamofgelid]}
			Expr {testquestflag[loyaltokahiri]}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$seerLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],333]+1]]]} 
	IF: All
			Expr {testquestflag[loyaltoliamofgelid]==0}
			Expr {testquestflag[loyaltokahiri]==0}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],333]+1]]]}
	
	~~ protection/invulnerability 334
	IF: Any
			Expr {testquestflag[loyaltoladyadja]}
			Expr {testquestflag[loyaltolordtyragar]}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$seerLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],334]+1]]]} 
	IF: All
			Expr {testquestflag[loyaltoladyadja]==0}
			Expr {testquestflag[loyaltolordtyragar]==0}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],334]+1]]]}
		
	~~ glory/retribution 335
	IF: Expr {testquestflag[loyaltoliamofgelid]}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$seerLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],335]+1]]]} 
	IF: Expr {testquestflag[loyaltoliamofgelid]==0}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],335]+1]]]}
		
	~~ temperance/hardening 336
	IF: Expr {testquestflag[loyaltolordtyragar]}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$seerLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],336]+1]]]} 
	IF: Expr {testquestflag[loyaltolordtyragar]==0}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],336]+1]]]}
	
	IF: Always
		DO: DoAll
				DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],338]+1]]]} ~~ aetheria
				DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],339]+1]]]} ~~ mana flow
				DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],340]+1]]]} ~~ mana infusion
				DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],342]+1]]]} ~~ purity
				DoExpr {listadd[$currentLum,dictgetitem[$regLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],343]+1]]]} ~~ craftsman
	
	~~ specialization 344
	IF: Any
			Expr {testquestflag[loyaltoladyadja]}
			Expr {testquestflag[loyaltokahiri]}
		DO: DoExpr {listadd[$currentLum,dictgetitem[$seerLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],344]+1]]]} 
	~~ special case, this aura only is used when loyal to adja or kahiri, set it it to a constant otherwise
	IF: All
			Expr {testquestflag[loyaltoladyadja]==0}
			Expr {testquestflag[loyaltokahiri]==0}
		DO: DoExpr {listadd[$currentLum,9999999]}
	
	~~ world 365
	IF: Always
		DO: DoExpr {listadd[$currentLum,dictgetitem[$worldLumLookup,tostring[wobjectgetintprop[wobjectgetplayer[],365]+1]]]} ~~ world
					
	IF: Always
		DO: DoAll
				~~ prep variables for loop finding lowest value
				DoExpr {setvar[li,0]}
				DoExpr {setvar[ci,1]}
				DoExpr {clearvar[lowestAuraIndex]}
				SetState {OuterLinearSearch}
~~ }
STATE: {OuterLinearSearch} ~~ {
	~~ 2 loop states to find lowest cost luminance Aura
	~~ expects variables currentLum, li, ci, lowestAuraIndex to be pre-set
	IF: Expr {$ci<listcount[$currentLum]}
		DO: DoAll
				DoExpr {setvar[currentLowest,$currentLum{{$li}}]}
				DoExpr {setvar[compareValue,$currentLum{{$ci}}]}
				SetState {InnerLinearSearch}
	IF: Expr {$ci==listcount[$currentLum]} ~~ list traversal complete
		DO: DoAll
				DoExpr {setvar[lowestAuraIndex,$li]}
				SetState {CheckMaxLum}
~~ }
STATE: {InnerLinearSearch} ~~ {
	IF: Expr {$currentLowest<=$compareValue}
		DO: DoAll
				DoExpr {setvar[ci,$ci+1]}
				SetState {OuterLinearSearch}
	IF: Expr {$currentLowest>$compareValue}
		DO: DoAll
				DoExpr {setvar[li,$ci]}
				DoExpr {setvar[ci,$ci+1]}
				SetState {OuterLinearSearch}
~~ }
STATE: {CheckMaxLum} ~~ {
	~~ when a lum aura is maxed, we set next value to 9999999
	IF: All
			Expr {$currentLum{{$lowestAuraIndex}} == 9999999}
			Expr {testquestflag[loyaltoliamofgelid]==0}
			Expr {testquestflag[loyaltoshadeofladyadja]==0}
			Expr {testquestflag[loyaltolordtyragar]==0}
			Expr {testquestflag[loyaltokahiri]==0}
		DO: DoAll
				Chat {/f I need to choose a Seer to spend more lum}
				SetState {WaitForSeerChoiceCommand}
	IF: Expr {$currentLum{{$lowestAuraIndex}}==9999999}
		DO: Chat {/f I'm max lum!  Time to enlighten?}
	IF: Expr {$currentLum{{$lowestAuraIndex}}!=9999999}
		DO: SetState {CheckIfEnoughLum}
	IF: SecsInStateGE 3
		DO: SetState {End}
~~ }
STATE: {CheckIfEnoughLum} ~~ {
	~~ check if enough lum to buy the lowest costing aura
	IF: Expr {$currentLum{{$lowestAuraIndex}}>getcharquadprop[6]}
		DO: DoAll
				ChatExpr {`/f Not enough lum (`+tostring[$currentLum{{$lowestAuraIndex}}]+`) for my next aura`}
				SetState {End}
	IF: Expr {$currentLum{{$lowestAuraIndex}}<=getcharquadprop[6]}
		DO: SetState {DetermineTokenAndDestination}
				
~~ }
STATE: {DetermineTokenAndDestination} ~~ {
	IF: Always
		DO: DoExpr {clearvar[lowestTokenName]}
	IF: Any
			Expr {$lowestAuraIndex==10} ~~ aura of the world
			Expr {$currentLum{{$lowestAuraIndex}}<=300000} ~~ any other Nalicana aura
		DO: DoAll
				DoExpr {setvar[lowestTokenName,$tokenList{{$lowestAuraIndex}}]}
				SetState {GoToNalicana}
	IF: All
			Expr {$lowestAuraIndex==0} ~~ destruction
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltoliamofgelid]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Dericost Token of the Aura of Destruction`]}
				SetState {GoToLiam}
	IF: All
			Expr {$lowestAuraIndex==0} ~~ destruction
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltokahiri]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Dark Falatacot Token of the Aura of Destruction`]}
				SetState {GoToKahiri}			
	IF: All
			Expr {$lowestAuraIndex==1} ~~ invulnerability
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltolordtyragar]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Haebrean Token of the Aura of Invulnerability`]}
				SetState {GoToTyragar}		
	IF: All
			Expr {$lowestAuraIndex==1} ~~ invulnerability
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltoladyadja]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Light Falatacot Token of the Aura of Invulnerability`]}
				SetState {GoToAdja}		
	IF: All
			Expr {$lowestAuraIndex==2} ~~ retribution
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltoliamofgelid]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Dericost Token of the Aura of Retribution`]}
				SetState {GoToLiam}
	IF: All
			Expr {$lowestAuraIndex==3} ~~ hardening
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltolordtyragar]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Haebrean Token of the Aura of Hardening`]}
				SetState {GoToTyragar}		
	IF: All
			Expr {$lowestAuraIndex==9} ~~ specialization
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltoladyadja]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Light Falatacot Token of the Aura of Specialization`]}
				SetState {GoToAdja}
	IF: All
			Expr {$lowestAuraIndex==9} ~~ specialization
			Expr {$currentLum{{$lowestAuraIndex}}>300000}
			Expr {testquestflag[loyaltokahiri]}
		DO: DoAll
				DoExpr {setvar[lowestTokenName,`Dark Falatacot Token of the Aura of Specialization`]}
				SetState {GoToKahiri}
~~ }
STATE: {GoToNalicana} ~~ {
	IF: Any 
			CellE D6990007 ~~ Nalicana area cells
			CellE D6990006
		DO: SetState {GetNalicanaToken}
	IF: Not CellE D6990007
		DO: CallState {CheckForTNDrop} {NavigatingToNalicana}
~~ }
STATE: {CheckForTNDrop} ~~ {
	IF: CellE 00070145 ~~ Annex TN drop
		DO: Return
	IF: CellE 00070133 ~~ Gharu'ndim TN drop
		DO: EmbedNav nav1 {TNGharuToAnnex.nav}
	IF: CellE 00070143 ~~ Aluvian TN drop
		DO: EmbedNav nav2 {TNAluvianToAnnex.nav}
	IF: CellE 00070156 ~~ Sho TN drop
		DO: EmbedNav nav3 {TNShoToAnnex.nav}
	IF: Not BlockE 00070000
		DO: SetState {AttemptPrimaryRecallToTN}
~~ }
STATE: {AttemptPrimaryRecallToTN} ~~ {
	IF: Always
		DO: EmbedNav nav4 {PrimaryRecall.nav}
	IF: BlockE 00070000
		DO: SetState {CheckForTNDrop}
	IF: SecsInStateGE 10
		DO: SetState {AttemptSecondaryRecallToTN}
~~ }
STATE: {AttemptSecondaryRecallToTN} ~~ {
	IF: Always
		DO: EmbedNav nav5 {SecondaryRecall.nav}
	IF: BlockE 00070000
		DO: SetState {CheckForTNDrop}
	IF: SecsInStateGE 10
		DO: DoAll
				EmbedNav nav6 {LifestoneRecall.nav}
				SetState {Abort}
~~ }
STATE: {NavigatingToNalicana} ~~ {
	IF: Always
		DO: EmbedNav nav0 {TownNetworktoNalicana.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {GetNalicanaToken}
~~ }
STATE: {GetNalicanaToken} ~~ {
	IF: Always
		DO: ChatExpr {\/ub usel +$lowestTokenName}
	IF: Expr {getitemcountininventorybynamerx[$lowestTokenName]>0}
		DO: SetState {RedeemNalicanaToken}
	IF: SecsInStateGE 10
		DO: SetState {GetNalicanaToken}
~~ }
STATE: {RedeemNalicanaToken} ~~ {
	IF: Always
		DO: DoAll
				Chat {/ub prepclick yes 5}
				ChatExpr {`/ub give `+$lowestTokenName+` to Nalicana`}
	IF: All
			Expr {getitemcountininventorybynamerx[$lowestTokenName]==0}
			SecsInStateGE 5
		DO: CallState {AssessPlayer} {ResetPositionAtNalicana}
	IF: All
			Expr {getitemcountininventorybynamerx[$lowestTokenName]>0}
			SecsInStateGE 15
		DO: SetState {RedeemNalicanaToken}
~~ }
STATE: {ResetPositionAtNalicana} ~~ {
	IF: Always
		DO: EmbedNav nav7 {ResetAtNalicana.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: SetState {RecordLumAuraCosts}
~~ }
STATE: {GoToLiam} ~~ {
	IF: CellE 015D0254 ~~ Liam area
		DO: SetState {CheckIfLiamFlagged}
	IF: Not CellE 015D0254
		DO: CallState {CheckForTNDrop} {NavigatingToLiam}
~~ }
STATE: {NavigatingToLiam} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {vtsetsetting[EnableCombat,`1`]}  ~~ a wisp blocks the path in the pathway to crater dungeon
				EmbedNav nav8 {TownNetworktoLiam.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: DoAll
				DoExpr {vtsetsetting[EnableCombat,`0`]}
				SetState {CheckIfLiamFlagged}
~~ }
STATE: {CheckIfLiamFlagged} ~~ {
	IF: Expr {testquestflag[loyaltoliamofgelid]}
		DO: SetState {GetLiamToken}
	IF: Expr {testquestflag[loyaltoliamofgelid]==0}
		DO: Chat {/f Give Liam an MMD to be flagged, then type ! continue in fellowship chat}
	IF:	ChatMatch {\[Fellowship\] (|).* (say|says), \"!continue\"$}
		DO: CallState {RefreshQuests} {RecordLumAuraCosts}
~~ }
STATE: {RefreshQuests} ~~ {
	IF: Always
		DO: Chat {/ub myquests}
	IF: SecsInStateGE 5
		DO: Return
~~ }
STATE: {GetLiamToken} ~~ {
	IF: Always
		DO: ChatExpr {\/ub usel +$lowestTokenName}
	IF: Expr {getitemcountininventorybynamerx[$lowestTokenName]>0}
		DO: SetState {RedeemLiamToken}
	IF: SecsInStateGE 10
		DO: SetState {GetLiamToken}
~~ }
STATE: {RedeemLiamToken} ~~ {
	IF: Always
		DO: DoAll
				Chat {/ub prepclick yes 5}
				ChatExpr {`/ub give `+$lowestTokenName+` to Liam of Gelid`}
	IF: All
			Expr {getitemcountininventorybynamerx[$lowestTokenName]==0}
			SecsInStateGE 5
		DO: CallState {AssessPlayer} {ResetPositionAtLiam}
	IF: All
			Expr {getitemcountininventorybynamerx[$lowestTokenName]>0}
			SecsInStateGE 15
		DO: SetState {RedeemLiamToken}
~~ }
STATE: {ResetPositionAtLiam} ~~ {
	IF: Always
		DO: EmbedNav nav9 {ResetAtLiam.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: SetState {RecordLumAuraCosts}
~~ }
STATE: {WaitForSeerChoiceCommand} ~~ {
	IF: Always
		DO: Chat {/f Select a Seer using in fellowship chat using ! follower by name: liam, adja, tyragar, kahiri}
	IF:	ChatMatch {\[Fellowship\] (|).* (say|says), \"!liam\"$}
		DO: SetState {GoToLiam}
	IF:	ChatMatch {\[Fellowship\] (|).* (say|says), \"!adja\"$}
		DO:	SetState {GoToAdja}
	IF:	ChatMatch {\[Fellowship\] (|).* (say|says), \"!tyragar\"$}
		DO:	SetState {GoToTyragar}
	IF: ChatMatch {\[Fellowship\] (|).* (say|says), \"!kahiri\"$}
		DO:	SetState {GoToKahiri}
~~ }
STATE: {End} ~~ {
	IF: All 
			SecsInStateGE 5
			Expr {testgvar[defaultMeta]==1}
		DO: ChatExpr {\/vt meta load +getgvar[defaultMeta]}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~

NAV: nav0 once ~~ {
	pnt -101.668401781718 -96.6869351387024 2.08333134651184E-05
	pnt -101.690957005819 -96.6542775472005 2.08333134651184E-05
	pnt -101.681562868754 -96.6183850606283 2.08333134651184E-05
	pnt -101.658139737447 -96.5923911571503 2.08333134651184E-05
	pnt -101.657186253866 -96.562037007014 2.08333134651184E-05
	pnt -101.657768090566 -96.5110992272695 2.08333134651184E-05
	pnt -101.646065934499 -96.4608334779739 2.08333134651184E-05
	pnt -101.617812601725 -96.4334677139918 2.08333134651184E-05
	pnt -101.602636814117 -96.431405099233 2.08333134651184E-05
	ptl 69.2733425180117 21.0529137293498 1.55835418701172 -101.5896220843 -96.4334579149882 -0.000262499845121056 14 {Eastham Portal}
	pnt 63.4973431905111 16.9477395693461 0.0785893599192301
	pnt 63.5595230102539 17.0438093821208 0.0825605789820353
	pnt 63.8627757072449 17.5115239461263 0.0739561875661214
	pnt 63.9574823697408 17.5884791374207 0.0660639762878418
	pnt 64.0380567232768 17.6442155838013 0.0662054618199666
	pnt 64.1146976470947 17.7046723683675 0.075799560546875
	pnt 64.1784738222758 17.7640241622925 0.0833541631698608
	pnt 64.2456494649251 17.8208386739095 0.0833541631698608
	pnt 64.3150304158529 17.8563554128011 0.0833541631698608
	ptl 69.2733425180117 21.0529137293498 1.55835418701172 64.3230124791463 17.8632041931152 0.0830708369612694 14 {Asheron's Island}
	ptl 69.2733425180117 21.0529137293498 1.55835418701172 69.3341316699982 16.2035083134969 -0.00013802082685288 14 {Asheron's Castle}
	pnt 69.1875 21.2478257497152 1.55835418701172
	pnt 69.187202390035 21.2225398381551 1.55835418701172
	pnt 69.1698972702026 21.2097366968791 1.55835418701172
	pnt 69.1860925038656 21.1928068796794 1.55835418701172
	pnt 69.1866212209066 21.1666450500488 1.55835418701172
	pnt 69.1872449874878 21.1195115407308 1.55835418701172
	pnt 69.1879423777262 21.0668074289958 1.55835418701172
	pnt 69.2144244511922 21.054102452596 1.55835418701172
	pnt 69.239363861084 21.0488503774007 1.55835418701172
	pnt 69.2562606523434 21.0538707733154 1.55835418701172
	pnt 69.2733425180117 21.0529137293498 1.55835418701172
~~ }

NAV: nav1 once ~~ {
	pnt -101.657279141744 -96.6906586329142 2.08333134651184E-05
~~ }
NAV: nav2 once ~~ {
	pnt -101.613241004944 -96.6465869903564 2.08333134651184E-05
	pnt -101.657922903697 -96.6921284039815 2.08333134651184E-05
~~ }
NAV: nav3 once ~~ {
	pnt -101.657663281759 -96.6933292071025 2.08333134651184E-05
~~ }
NAV: nav4 once ~~ {
	rcl -101.657922903697 -96.6921284039815 2.08333134651184E-05 {Primary Portal Recall}
~~ }
NAV: nav5 once ~~ {
	rcl -101.657922903697 -96.6921284039815 2.08333134651184E-05 {Secondary Portal Recall}
~~ }
NAV: nav6 once ~~ {
	rcl 56.8844753265381 33.6273729642232 0.175020837783813 {Lifestone Recall}
~~ }

NAV: nav7 once ~~ {
	pnt 69.2755519946416 21.0562752405802 1.55835418701172
	pnt 69.2694241027037 21.0456024169922 1.55835418701172
~~ }
NAV: nav8 once ~~ {
	pnt -101.676674302419 -96.6709344863892 2.08333134651184E-05
	pnt -101.691022539139 -96.6503500302633 2.08333134651184E-05
	pnt -101.679571755727 -96.6179570515951 2.08333134651184E-05
	pnt -101.657402388255 -96.5880156199137 2.08333134651184E-05
	pnt -101.659499295553 -96.5561253070831 2.08333134651184E-05
	pnt -101.658592096965 -96.5249994119008 2.08333134651184E-05
	pnt -101.658726215363 -96.4899859428406 2.08333134651184E-05
	pnt -101.66370528539 -96.4580651362737 2.08333134651184E-05
	pnt -101.681501197815 -96.4327340523402 2.08333134651184E-05
	pnt -101.70198747317 -96.4035730759303 2.08333134651184E-05
	pnt -101.712513891856 -96.3880543788274 2.08333134651184E-05
	ptl -101.040454713504 -27.7417392571767 0.150020837783813 -101.727083333333 -96.3916666666667 -0.000262499845121056 14 {Glenden Wood Portal}
	pnt 26.4772979418437 29.7212565104167 0.245471175511678
	pnt 26.5186915715536 29.6925463358561 0.238572231928507
	pnt 26.5707060496012 29.6702860832214 0.22817767461141
	pnt 26.6731461842855 29.6231750806173 0.221766630808512
	pnt 26.690723101298 29.6012683232625 0.232720009485881
	pnt 26.7224571228027 29.572602335612 0.22212560971578
	pnt 26.7554829915365 29.5610138893127 0.208354171117147
	pnt 26.798993174235 29.5457465489705 0.208354171117147
	pnt 26.8319353739421 29.5268044789632 0.208354171117147
	pnt 26.8639866232872 29.5122371673584 0.208354171117147
	pnt 26.9022267063459 29.495223792394 0.208354171117147
	pnt 26.9618648131688 29.4580324331919 0.211320368448893
	pnt 27.0385429223379 29.4185199896495 0.235736576716105
	pnt 27.0899393717448 29.3866977055868 0.260005680720011
	pnt 27.1379797299703 29.3600248654683 0.272015762329102
	pnt 27.1699495315552 29.3476358811061 0.275020853678385
	pnt 27.1995507558187 29.336389152209 0.275020853678385
	pnt 27.2256513913472 29.3187741200129 0.275020853678385
	pnt 27.255863348643 29.2919011910756 0.273554992675781
	pnt 27.2857019106547 29.2653603812059 0.266095352172852
	pnt 27.3185402552287 29.249785677592 0.257921504974365
	pnt 27.3675163269043 29.2321633021037 0.252993615468343
	pnt 27.3977942148844 29.2232051213582 0.254486640294393
	pnt 27.4269227345785 29.2092116038005 0.25681889851888
	pnt 27.4565413792928 29.1881035486857 0.259246667226156
	pnt 27.4799671173096 29.1718860626221 0.260739008585612
	pnt 27.5079676310221 29.1562205632528 0.27323849995931
	pnt 27.6451468785604 29.0810036341349 0.338473002115885
	pnt 27.7440804799398 29.0342571894328 0.384004783630371
	pnt 27.8328561147054 28.9835240046183 0.422052192687988
	pnt 27.9198691685994 28.9244393666585 0.464596398671468
	pnt 28.0343611717224 28.8348446210225 0.532564894358317
	pnt 28.1159850438436 28.7698288917542 0.578526369730632
	pnt 28.2156679789225 28.6927657922109 0.609710057576497
	pnt 28.3211579004923 28.6214593887329 0.610700225830078
	pnt 28.3850883483887 28.5816834608714 0.596555582682292
	pnt 28.4412869771322 28.5248220761617 0.577059682210286
	pnt 28.4804579138756 28.4758119424184 0.562268956502279
	pnt 28.5221971829732 28.4284243265788 0.548741785685221
	pnt 28.5611070871353 28.3842486063639 0.537211036682129
	pnt 28.6065263589223 28.3386645634969 0.523933092753092
	pnt 28.65761607488 28.3077988942464 0.519569619496663
	pnt 28.696139494578 28.3006862004598 0.516952069600423
	pnt 28.7260279019674 28.3024467468262 0.512349541982015
	pnt 28.7569417317708 28.2972272237142 0.507775688171387
	pnt 28.7896755854289 28.2848384221395 0.505047861735026
	pnt 28.8883652369181 28.2474871317546 0.497242546081543
	pnt 28.9625023523966 28.2150933583577 0.497505251566569
	pnt 29.0009616851807 28.1889705022176 0.501859060923258
	pnt 29.05013256073 28.1442829767863 0.50930700302124
	pnt 29.090211613973 28.1175800005595 0.513757483164469
	pnt 29.1592194239299 28.080261516571 0.520745531717936
	pnt 29.2128494262695 28.0515261332194 0.530003929138184
	pnt 29.2516741959999 28.0271239916484 0.537445831298828
	pnt 29.2870096047719 27.9989919344584 0.548023732503255
	pnt 29.3193311691284 27.9732593218486 0.557699394226074
	pnt 29.3486687342326 27.9491320927938 0.566610209147135
	pnt 29.3885687510173 27.9530283292135 0.569396845499675
	pnt 29.4194308280945 27.9584726333618 0.571061261494954
	pnt 29.4501921812693 27.9632689158122 0.572841326395671
	ptl -101.040454713504 -27.7417392571767 0.150020837783813 29.4665354092916 27.9629683176676 0.575034737586975 14 {Highland Manors Portal}
	pnt 16.9418883005778 63.2250244140625 0.916687456766764
	pnt 16.9802854855855 63.2050710042318 0.901544698079427
	pnt 17.0060797373454 63.1664481798808 0.888647588094076
	pnt 17.0141106923421 63.1226560910543 0.884632110595703
	pnt 17.0104494094849 63.0776250680288 0.886462720235189
	pnt 17.0001361211141 63.0308761278788 0.891619364420573
	pnt 16.9844206492106 62.9880505084991 0.899477132161458
	pnt 16.9649372418722 62.9424267530441 0.905467160542806
	pnt 16.9256704012553 62.8586492985487 0.911599667867025
	pnt 16.9023278236389 62.8133294423421 0.895437177022298
	pnt 16.8762303352356 62.7630761464437 0.862693341573079
	pnt 16.8516319910685 62.7157096862793 0.821070289611816
	pnt 16.8269205093384 62.6681253433228 0.768971824645996
	pnt 16.7970295906067 62.6105676015218 0.729274876912435
	pnt 16.7666125615438 62.5519962628682 0.690415891011556
	pnt 16.7282115936279 62.400753847758 0.651017252604167
	pnt 16.7361172993978 62.3405973434448 0.632745742797852
	pnt 16.7483010609945 62.2810682455699 0.620409138997396
	pnt 16.764296468099 62.2401978651683 0.608347829182943
	pnt 16.7754930496216 62.1529962698619 0.601816495259603
	pnt 16.7838546117147 62.0828151206175 0.608136431376139
	pnt 16.799219640096 62.0027444839478 0.604642740885417
	pnt 16.8128124872843 61.9316743850708 0.602911440531413
	pnt 16.8374497731527 61.7949550628662 0.579846382141113
	pnt 16.8262292544047 61.743411286672 0.585613632202148
	pnt 16.813813495636 61.7070343653361 0.600423367818197
	pnt 16.7849494616191 61.6461251894633 0.629552459716797
	pnt 16.7569828987122 61.5871097882589 0.65777587890625
	pnt 16.7286998430888 61.5309684435527 0.680698585510254
	pnt 16.7146564006805 61.5040854930878 0.691130828857422
	pnt 16.635215473175 61.3788543701172 0.739514350891113
	pnt 16.6014222621918 61.3401923735936 0.753594907124837
	pnt 16.5554408152898 61.2937035044034 0.768515841166178
	pnt 16.5147173961004 61.2540378411611 0.773913828531901
	pnt 16.4758809745312 61.216261100769 0.775574239095052
	pnt 16.4367790222168 61.1696562449137 0.772167015075684
	pnt 16.3953582763672 61.1202874501546 0.752229817708333
	pnt 16.3460674285889 61.0645662943522 0.729220835367839
	pnt 16.2384169260661 60.9537968953451 0.665373738606771
	pnt 16.204731241862 60.9191349347432 0.642509841918945
	pnt 16.172198677063 60.8856590270996 0.620428403218587
	pnt 16.1350912094116 60.8474752108256 0.593999226888021
	pnt 16.0917611440023 60.8028882980347 0.560977999369303
	pnt 15.8823042551676 60.5873570760091 0.450020853678385
	pnt 15.7733407497406 60.4788791120052 0.441687520345052
	pnt 15.7380367914836 60.4388228734334 0.441687520345052
	pnt 15.6939745783806 60.3888293584188 0.441687520345052
	pnt 15.6953335722287 60.4260666529338 0.441687520345052
	pnt 15.6991932670275 60.4524107764165 0.441687520345052
	pnt 15.7004519661268 60.4717842022578 0.442955780029297
	pnt 15.6997914195061 60.4873234828313 0.443667221069336
	pnt 15.700160241127 60.5325421651204 0.421687507629395
	pnt 15.7003940383593 60.5604364474614 0.421687507629395
	pnt 15.7006437301636 60.5903678099314 0.421687507629395
	pnt 15.7008241256078 60.6114105542501 0.421687507629395
	ptl -101.040454713504 -27.7417392571767 0.150020837783813 15.7 60.6226791699727 0.421404182910919 14 {Crater Pathway}
	pnt -101.070978856087 29.5450926462809 2.08333134651184E-05
	pnt -101.06688914299 29.5667668660482 2.08333134651184E-05
	pnt -101.065910482407 29.6230225880941 0.0216667671998342
	pnt -101.064588459333 29.6426736195882 0.0250208338101705
	pnt -101.051630520821 29.6475284576416 0.0250208338101705
	pnt -101.041417813301 29.6508583068848 0.0250208338101705
	pnt -101.021830972036 29.6762137095133 0.0250208338101705
	pnt -101.02399790287 29.7151187896729 0.0269244889418284
	pnt -101.022765874863 29.7634298960368 0.0500208298365275
	pnt -101.024829212825 29.8035410563151 0.0549778461456299
	pnt -101.021470197042 29.8621289571126 0.0750208298365275
	pnt -101.023444525401 29.9190569559733 0.0750208298365275
	pnt -101.023052255313 29.9689627329508 0.104230848948161
	pnt -101.02261745135 30.05009765625 0.150020837783813
	pnt -101.025842499733 30.1257007598877 0.150020837783813
	pnt -101.026095525424 30.1594509124756 0.168523772557577
	pnt -101.026417605082 30.2083841959635 0.175020837783813
	pnt -101.026005657514 30.2394766489665 0.175020837783813
	pnt -101.026831841469 30.2824061075846 0.175020837783813
	pnt -101.027203973134 30.3311458587647 0.1965407371521
	pnt -101.01892589728 30.3453084309896 0.200020837783813
	pnt -100.983998028437 30.3651411692301 0.200020837783813
	pnt -100.983519744873 30.4066872914632 0.200020837783813
	pnt -100.982000780106 30.4543000539144 0.220433251063029
	pnt -100.980712127686 30.4987065633138 0.225020837783813
	pnt -100.981466738383 30.5523414611816 0.225020837783813
	pnt -100.983134396871 30.599743270874 0.232699187596639
	pnt -100.983818817139 30.6456562042236 0.250020837783813
	pnt -100.983814843496 30.6848436355591 0.25875940322876
	pnt -100.983548577627 30.7744201024373 0.312505276997884
	pnt -100.98262664477 30.869668006897 0.369654019673665
	pnt -100.97987092336 30.9367053985596 0.40987647374471
	pnt -100.978885793686 30.9812273025513 0.425020853678385
	pnt -100.983384593328 31.033164024353 0.425322469075521
	pnt -101.000968201955 31.0560206095378 0.425020853678385
	pnt -101.021443986893 31.0661378860474 0.425020853678385
	pnt -101.049205390612 31.0684299468994 0.425020853678385
	pnt -101.070729573568 31.0912314097087 0.425020853678385
	pnt -101.066108115514 31.1330282211304 0.425020853678385
	pnt -101.023031783104 31.1713886578878 0.425020853678385
	pnt -101.023584826787 31.2079292297363 0.425020853678385
	pnt -101.024746743838 31.2376677195231 0.437520853678385
	pnt -101.071609989802 31.2338495890299 0.462520853678385
	pnt -101.062994726499 31.2619280497233 0.475020853678385
	pnt -101.045680483182 31.2776304880778 0.475849151611328
	pnt -101.020117783546 31.2717985153198 0.487520853678385
	pnt -101.023090354602 31.3215944608053 0.512520853678385
	pnt -101.05375336806 31.3207352638245 0.525020853678385
	pnt -101.065032879512 31.3401471773783 0.525020853678385
	pnt -101.063438598315 31.3502632141113 0.525020853678385
	pnt -101.04554122289 31.3601943333944 0.525020853678385
	pnt -101.036473401388 31.3635846455892 0.525020853678385
	pnt -101.026263173421 31.3772178332011 0.525020853678385
	pnt -101.025110642115 31.3843711535136 0.525020853678385
	pnt -101.025031447411 31.4205707550049 0.525195662180583
	pnt -101.024092825254 31.5162073294322 0.575020790100098
	pnt -101.018617796898 31.5455157359441 0.575020790100098
	pnt -101.006902726491 31.5999342600505 0.575020790100098
	pnt -100.996537510554 31.6482060254862 0.575020790100098
	pnt -101.026475938161 31.6495457253108 0.575020790100098
	pnt -101.063887031873 31.6501782516328 0.575020790100098
	ptl -101.040454713504 -27.7417392571767 0.150020837783813 -101.078913331032 31.6493887166803 0.57473748922348 14 {Surface}
	pnt 13.633466275533 64.8000977198283 1.15502077738444
	pnt 13.6265748977661 64.8000438372294 1.15502077738444
	pnt 13.5725232124329 64.8002838452657 1.17631289164225
	pnt 13.5558001200358 64.7705755869547 1.17502085367839
	pnt 13.5265360832214 64.7309911092122 1.19402961730957
	pnt 13.4972126642863 64.6929184277852 1.23210233052572
	pnt 13.4684015115102 64.6555112044016 1.26950950622559
	pnt 13.4422149181366 64.6105172157288 1.29346466064453
	pnt 13.4105850060781 64.5480515638987 1.31301905314128
	pnt 13.35448234876 64.4544139266014 1.34894014994303
	pnt 13.3138623515765 64.38424949646 1.38250974019369
	pnt 13.2774541338285 64.3269861857096 1.42148691813151
	pnt 13.2563119247556 64.2894121170044 1.44651374816895
	pnt 13.2449165980021 64.258806737264 1.4671449025472
	pnt 13.231391398112 64.2066859563192 1.50440495808919
	pnt 13.2175797144572 64.1614466667175 1.53603248596191
	pnt 13.2093978246053 64.1319782892863 1.56127548217773
	pnt 13.2020839055379 64.1080421447754 1.58399264017741
	pnt 13.1953126271566 64.0858814557393 1.60502471923828
	pnt 13.1911947886149 64.071825281779 1.61839459737142
	ptl -101.040454713504 -27.7417392571767 0.150020837783813 13.1864875157674 64.0650895754496 1.62406241893768 14 {Mountain Cavern Portal}
	pnt -101.040454713504 -27.7417392571767 0.150020837783813
~~ }
NAV: nav9 once ~~ {
	pnt -101.041503636042 -27.7447728792826 0.150020837783813
~~ }