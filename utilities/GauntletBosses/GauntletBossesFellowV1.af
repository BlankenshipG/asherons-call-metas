~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/metaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

STATE: {Default} ~~ {
	IF: Expr {getfellowshipstatus[]==0} ~~ must be in a fellow, since takes a fellow to easily kill bosses and for shared looting
		DO: DoAll
				DoExpr {echo[Not in a fellowship\!,15]}
				SetState {End}
	IF: Expr {testquestflag[gauntletbossholcha_flag]==0} ~~ check if flagged for at least one boss
		DO: DoAll
				DoExpr {echo[Not flagged for even 1 Gauntlet Boss\!  Need to complete more Gauntlet rooms,15]}
				SetState {End}
	IF:	Always
		DO:	DoAll
				DoExpr {echo[Assessing player to determine society\.\.\.,15]}
				DoExpr {wobjectrequestdata[wobjectgetplayer[]]}  ~~ refresh player data
				SetState {CheckPlayerSociety}			
~~ }
STATE: {CheckPlayerSociety} ~~ {
	IF:	All
			Expr {wobjectgetintprop[wobjectgetplayer[],287]>0} ~~ 287 is hand
			Expr {wobjecthasdata[wobjectgetplayer[]]==1}
		DO: DoAll
				DoExpr {echo[wobjectgetname[wobjectgetplayer[]]+` is in Celestial Hand`,15]}
				DoExpr {setvar[psociety,'Hand']}
				SetState {Settings}
	IF:	All
			Expr {wobjectgetintprop[wobjectgetplayer[],288]>0} ~~ 288 is web
			Expr {wobjecthasdata[wobjectgetplayer[]]==1}
		DO: DoAll
				DoExpr {echo[wobjectgetname[wobjectgetplayer[]]+` is in Eldrytch Web`,15]}
				DoExpr {setvar[psociety,'Web']}
				SetState {Settings}
	IF:	All
			Expr {wobjectgetintprop[wobjectgetplayer[],289]>0} ~~ 289 is blood
			Expr {wobjecthasdata[wobjectgetplayer[]]==1}
		DO: DoAll
				DoExpr {echo[wobjectgetname[wobjectgetplayer[]]+` is in Radiant Blood`,15]}
				DoExpr {setvar[psociety,'Blood']}
				SetState {Settings}
	IF: SecsInStateGE 10
		DO:	DoAll
				DoExpr {echo[wobjectgetname[wobjectgetplayer[]]+` is not in a society!`,15]}
				SetState {End}			
~~ }
STATE: {Settings} ~~ {
	IF:	Always
		DO:	DoAll
				Chat {/ub opt set VTank.PatchExpressionEngine True}
				DoExpr {vtsetsetting[NavCloseStopRange,`0.00625`]} ~~ 1.5
				DoExpr {vtsetsetting[NavPriorityBoost,`0`]}
				DoExpr {vtsetsetting[EnableBuffing,`1`]}
				DoExpr {vtsetsetting[EnableCombat,`1`]}
				DoExpr {vtsetsetting[EnableNav,`1`]}
				DoExpr {vtsetsetting[IdlePeaceMode,`1`]}
				DoExpr {vtsetsetting[EnableLooting,`1`]}
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`0`]}
				DoExpr {vtsetsetting[StopMacroOnDeath,`1`]}
				DoExpr {uboptset[`VTank.FixPortalLoops`,True]}
				DoExpr {vtsetsetting[UseDispelItems,`0`]}
				DoExpr {vtsetsetting[AutoAttackPower,`1`]}
				DoExpr {vtsetsetting[BlacklistMonsterTimeoutSeconds,`30`]}
				DoExpr {vtsetsetting[Recharge-Norm-Hitp,`70`]}
				DoExpr {vtsetsetting[Recharge-Norm-Stam,`5`]}
				DoExpr {vtsetsetting[Recharge-Norm-Mana,`15`]}
				DoExpr {vtsetsetting[Recharge-Notarg-Hitp,`0`]}
				DoExpr {vtsetsetting[Recharge-Notarg-Stam,`0`]}
				DoExpr {vtsetsetting[Recharge-Notarg-Mana,`50`]}
				DoExpr {vtsetsetting[SummonPets,`1`]}
				DoExpr {vtsetsetting[PetRangeMode,`1`]}
				DoExpr {vtsetsetting[PetCustomRange,`0.0625`]} ~~ 15
				DoExpr {vtsetsetting[AttackDistance,`0.025`]} ~~ 6
				DoExpr {vtsetsetting[ApproachDistance,`0.0208333`]} ~~ 5	
				Chat {/vt loot load GauntletBosses.utl}
				SetState {Begin}
~~ }
STATE: {Begin} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {echo[Gauntlet Bosses Meta by Sun Invictus,15]}
				DoExpr {echo[Expects VTank Monster tab to be configured for quest,15]}
	IF: All 
			Not NeedToBuff
			SecsInStateGE 5
		DO: DoAll
				DoExpr {setvar[stopWatch,stopwatchstart[stopwatchcreate[]]]}
				SetState {DetermineSocietyStart}
~~ }
STATE: {DetermineSocietyStart} ~~ {
	IF: Expr {getvar[psociety]=='Hand'}
		DO: SetState {CheckIfInHandGauntletLobby}
	IF: Expr {getvar[psociety]=='Web'} 
		DO: SetState {CheckIfInWebGauntletLobby}
	IF: Expr {getvar[psociety]=='Blood'}
		DO: SetState {CheckIfInBloodGauntletLobby}
~~ }
STATE: {CheckIfInWebGauntletLobby} ~~ {
	IF: BlockE 596B0000
		DO: SetState {NavigatingToWebLairOfHolcha}
	IF: Not BlockE 596B0000
		DO: CallState {CheckForTownNetworkDrop} {NavigatingToWebGauntletLobby}
~~ }
STATE: {CheckForTownNetworkDrop} ~~ {
	IF: CellE 00070145 ~~ Annex TN drop
		DO: Return
	IF: CellE 00070133 ~~ Gharu'ndim TN drop
		DO: SetState {NavigatingFromGharuToAnnexDrop}
	IF: CellE 00070143 ~~ Aluvian TN drop
		DO: SetState {NavigatingFromAluvianToAnnexDrop}
	IF: CellE 00070156 ~~ Sho TN drop
		DO: SetState {NavigatingFromShoToAnnexDrop}
	IF: All
			Not CellE 00070145
			Not CellE 00070133
			Not CellE 00070143
			Not CellE 00070156
		DO: SetState {AttemptPrimaryRecallToTownNetwork}
~~ }
STATE: {NavigatingFromGharuToAnnexDrop} ~~ {
	IF: Always
		DO: EmbedNav nav7 {TNGharuToAnnex.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckForTownNetworkDrop}
~~ }
STATE: {NavigatingFromAluvianToAnnexDrop} ~~ {
	IF: Always
		DO: EmbedNav nav8 {TNAluvianToAnnex.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckForTownNetworkDrop}
~~ }
STATE: {NavigatingFromShoToAnnexDrop} ~~ {
	IF: Always
		DO: EmbedNav nav9 {TNShoToAnnex.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckForTownNetworkDrop}
~~ }
STATE: {AttemptPrimaryRecallToTownNetwork} ~~ {
	IF: Always
		DO: EmbedNav nav10 {PrimaryRecall.nav}
	IF: All
			ExitPortal
			BlockE 00070000
		DO: SetState {CheckForTownNetworkDrop}
	IF: All
			ExitPortal
			Not BlockE 00070000
		DO: SetState {AttemptSecondaryRecallToTownNetwork}
~~ }
STATE: {AttemptSecondaryRecallToTownNetwork} ~~ {
	IF: Always
		DO: EmbedNav nav11 {SecondaryRecall.nav}
	IF: All
			ExitPortal
			BlockE 00070000
		DO: SetState {CheckForTownNetworkDrop}
	IF: All
			ExitPortal
			Not BlockE 00070000
		DO: DoAll
				DoExpr {echo[Could not get to Town Network via recalls\! Aborting,15]}
				SetState {CouldNotReachTownNetwork}
~~ }
STATE: {NavigatingToWebGauntletLobby} ~~ {
	IF: Always
		DO: EmbedNav nav12 {TownNetworkToWebGauntletLobby.nav}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {NavigatingToWebLairOfHolcha}
~~ }
STATE: {NavigatingToWebLairOfHolcha} ~~ {
	IF: Always
		DO: EmbedNav nav0 {ToLairOfHolcha.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {UseWebLairOfHolcha}
~~ }
STATE: {UseWebLairOfHolcha} ~~ {
	IF: Always
		DO: Chat {/ub use Lair of Holcha}
	IF: IntoPortal
		DO: SetState {LootHolcha}
	IF: SecsInStateGE 5
		DO: SetState {UseWebLairOfHolcha}
~~ }
STATE: {LootHolcha} ~~ {
	IF: All 
			Expr {wobjectfindnearestbynameandobjectclass[27,`Corpse of Holcha`] != 0}
			Expr {isportaling[]==0}
		DO: DoAll
				DoExpr {setvar[corpse,wobjectfindnearestbynameandobjectclass[27,`Corpse of Holcha`]]}
				CallState {FaceCorpse} {CheckForHolchasHead}
~~ }
STATE: {FaceCorpse} ~~ {
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1}
		DO: ChatExpr {\/ub face +getheadingto[getvar[corpse]]}
	IF: All
			Expr {wobjectisvalid[getvar[corpse]]==1}
			SecsInStateGE 3
		DO: DoAll
				DoExpr {setvar[prevDistance,coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]]}
				SetState {CheckCorpseDistance}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0}
		DO: Return
~~ }
STATE: {CheckCorpseDistance} ~~ {
	IF: Expr {getvar[prevDistance] > coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]}
		DO: SetState {LootHolcha} ~~ something went wrong, should be closer not farther
	IF: Expr {getvar[prevDistance] <= coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]}
		DO: DoExpr {setvar[prevDistance,coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]]}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1 && coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]] > 3}
		DO: CallState {MoveTowardsCorpse} {CheckCorpseDistance}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1 && coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]] < 3}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`0`]}
				Return
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0}
		DO: Return
~~ }
STATE: {MoveTowardsCorpse} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {setmotion[Forward,1];delayexec[200,`setmotion[Forward,0]`]}
				Return
~~ }
STATE: {CheckForHolchasHead} ~~ {
	IF: All
			ItemCountGE 1 {Holcha's Head}
			Expr {getvar[psociety]=='Web'}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				SetState {NavigatingToWebHolchaSurfaceDoor}
	~~ todo add conditionals for other societies
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0} ~~ something went wrong, corpse is gone
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				SetState {LootHolcha}
~~ }
STATE: {NavigatingToWebHolchaSurfaceDoor} ~~ {
	IF: Always
		DO: EmbedNav nav1 {ToHolchaSurfaceDoor.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: CallState {UseWebSurfaceDoor} {CheckTrembOrhFlag}
~~ }
STATE: {UseWebSurfaceDoor} ~~ {
	IF: Always
		DO: Chat {/ub use Surface}
	IF: IntoPortal
		DO: SetState {UseWebGauntletPortal}
	IF: SecsInStateGE 5
		DO: SetState {UseWebSurfaceDoor}
~~ }
STATE: {UseWebGauntletPortal} ~~ {
	IF: Expr {isportaling[]==0}
		DO: Chat {/ub use Eldrytch Web Gauntlet}
	IF: IntoPortal
		DO: Return
	IF: SecsInStateGE 5
		DO: SetState {UseWebGauntletPortal}
~~ }
STATE: {CheckTrembOrhFlag} ~~ {
	IF:	All
			Expr {testquestflag[gauntletbosstremborh_flag]==0}
			Expr {getvar[psociety]=='Web'}
		DO: DoAll
				DoExpr {echo[Not flagged for Tremb\'Orh,15]}
				SetState {NavigatingToWebMasterOfGauntlet}
	IF: All
			Expr {testquestflag[gauntletbosstremborh_flag]==1}
			Expr {getvar[psociety]=='Web'}
		DO: SetState {NavigatingToWebLairOfTrembOrh}		
	~~ todo add conditionals for other societies
~~ }
STATE: {NavigatingToWebLairOfTrembOrh} ~~ {
	IF: Always
		DO: EmbedNav nav2 {ToLairOfTrembOrh.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: SetState {UseWebLairOfTrembOrh}
~~ }
STATE: {UseWebLairOfTrembOrh} ~~ {
	IF: Always
		DO: Chat {/ub use Lair of Tremb'Orh}
	IF: IntoPortal
		DO: SetState {LootTrembOrh}
	IF: SecsInStateGE 5
		DO: SetState {UseWebLairOfTrembOrh}
~~ }
STATE: {LootTrembOrh} ~~ {
	IF: All 
			Expr {wobjectfindnearestbynameandobjectclass[27,`Corpse of Tremb'Orh`] != 0}
			Expr {isportaling[]==0}
		DO: DoAll
				DoExpr {setvar[corpse,wobjectfindnearestbynameandobjectclass[27,`Corpse of Tremb'Orh`]]}
				CallState {FaceTrembOrhCorpse} {CheckForHelmOfTrembOrh}
~~ }
STATE: {FaceTrembOrhCorpse} ~~ {
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1}
		DO: ChatExpr {\/ub face +getheadingto[getvar[corpse]]}
	IF: All
			Expr {wobjectisvalid[getvar[corpse]] == 1}
			SecsInStateGE 3
		DO: DoAll
				DoExpr {setvar[prevDistance,coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]]}
				SetState {CheckTrembOrhCorpseDistance}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0}
		DO: Return
~~ }
STATE: {CheckTrembOrhCorpseDistance} ~~ {
	IF: Expr {getvar[prevDistance] > coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]}
		DO: SetState {LootTrembOrh} ~~ something went wrong, should be closer not farther
	IF: Expr {getvar[prevDistance] <= coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]}
		DO: DoExpr {setvar[prevDistance,coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]]}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1 && coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]] > 3}
		DO: CallState {MoveTowardsCorpse} {CheckCorpseDistance}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1 && coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]] < 3}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`0`]}
				Return
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0}
		DO: Return
~~ }
STATE: {CheckForHelmOfTrembOrh} ~~ {
	IF: All
			ItemCountGE 1 {Helm of Tremb'Orh}
			Expr {getvar[psociety]=='Web'}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				SetState {NavigatingToWebTrembOrhSurfaceDoor}
	~~ todo add more conditionals for other societies
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0} ~~ something went wrong, corpse is gone
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				SetState {LootTrembOrh}
~~ }
STATE: {NavigatingToWebTrembOrhSurfaceDoor} ~~ {
	IF: Always
		DO: EmbedNav nav3 {ToTrembOrhSurfaceDoor.nav}  ~~ this currently goes to wrong side of room!
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: CallState {UseWebSurfaceDoor} {CheckGromnusFlag}
~~ }
STATE: {CheckGromnusFlag} ~~ {
	IF:	All
			Expr {testquestflag[gauntletbossgromnuschampion_flag]==0}
			Expr {getvar[psociety]=='Web'}
		DO: DoAll
				DoExpr {echo[Not flagged for Gromnus Champion,15]}
				SetState {NavigatingToWebMasterOfGauntlet}
	IF: All
			Expr {testquestflag[gauntletbossgromnuschampion_flag]==1}
			Expr {getvar[psociety]=='Web'}
		DO: SetState {NavigatingToWebLairOfGromnusChampion}		
	~~ todo add conditionals for other societies
~~ }
STATE: {NavigatingToWebLairOfGromnusChampion} ~~ {
	IF: Always
		DO: EmbedNav nav5 {ToLairOfGromnusChampion.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: SetState {UseWebLairOfGromnusChampion}
~~ }
STATE: {UseWebLairOfGromnusChampion} ~~ {
	IF: Always
		DO: Chat {/ub use Lair of the Gromnus Champion}
	IF: IntoPortal
		DO: SetState {LootGromnusChampion}
	IF: SecsInStateGE 5
		DO: SetState {UseWebLairOfGromnusChampion}
~~ }
STATE: {LootGromnusChampion} ~~ {
	IF: All 
			Expr {wobjectfindnearestbynameandobjectclass[27,`Corpse of Gromnus Champion`] != 0}
			Expr {isportaling[]==0}
		DO: DoAll
				DoExpr {setvar[corpse,wobjectfindnearestbynameandobjectclass[27,`Corpse of Gromnus Champion`]]}
				CallState {FaceGromnusCorpse} {CheckForGromnusEye}
~~ }
STATE: {FaceGromnusCorpse} ~~ {
	IF: Expr {wobjectisvalid[getvar[corpse]]==1}
		DO: ChatExpr {\/ub face +getheadingto[getvar[corpse]]}
	IF: All
			Expr {wobjectisvalid[getvar[corpse]]==1}
			SecsInStateGE 3
		DO: DoAll
				DoExpr {setvar[prevDistance,coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]]}
				SetState {CheckGromnusCorpseDistance}
	IF: Expr {wobjectisvalid[getvar[corpse]]==0}
		DO: Return
~~ }
STATE: {CheckGromnusCorpseDistance} ~~ {
	IF: Expr {getvar[prevDistance] > coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]}
		DO: SetState {LootGromnusChampion} ~~ something went wrong, should be closer not farther
	IF: Expr {getvar[prevDistance] <= coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]}
		DO: DoExpr {setvar[prevDistance,coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]]]}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1 && coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]] > 3}
		DO: CallState {MoveTowardsCorpse} {CheckGromnusCorpseDistance}
	IF: Expr {wobjectisvalid[getvar[corpse]] == 1 && coordinatedistancewithz[getplayercoordinates[],wobjectgetphysicscoordinates[getvar[corpse]]] < 3}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`0`]}
				Return
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0}
		DO: Return
~~ }
STATE: {CheckForGromnusEye} ~~ {
	IF: All
			ItemCountGE 1 {Gromnus Eye}
			Expr {getvar[psociety]=='Web'}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				SetState {NavigatingToWebGromnusSurfaceDoor}
	~~ todo add more conditionals for other societies
	IF: Expr {wobjectisvalid[getvar[corpse]] == 0} ~~ something went wrong, corpse is gone
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				SetState {LootGromnusChampion}
~~ }
STATE: {NavigatingToWebGromnusSurfaceDoor} ~~ {
	IF: Always
		DO: EmbedNav nav6 {ToGromnusSurfaceDoor.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: CallState {UseWebSurfaceDoor} {NavigatingToWebMasterOfGauntlet}
~~ }
STATE: {NavigatingToWebMasterOfGauntlet} ~~ {
	IF: Always
		DO: EmbedNav nav4 {ToMasterOfGauntlet.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: SetState {TurnInHolchasHead}
~~ }
STATE: {TurnInHolchasHead} ~~ {
	IF: ItemCountGE 1 {Holcha's Head}
		DO: Chat {/ub give Holcha's Head to Master of the Gauntlet}
	IF: ItemCountLE 0 {Holcha's Head}
		DO: SetState {TurnInHelmOfTrembOrh}
	IF: SecsInStateGE 5
		DO: SetState {TurnInHolchasHead}
~~ }
STATE: {TurnInHelmOfTrembOrh} ~~ {
	IF: ItemCountGE 1 {Helm of Tremb'Orh}
		DO: Chat {/ub give Helm of Tremb'Orh to Master of the Gauntlet}
	IF: ItemCountLE 0 {Helm of Tremb'Orh}
		DO: SetState {TurnInGromnusEye}
	IF: SecsInStateGE 5
		DO: SetState {TurnInHelmOfTrembOrh}
~~ }
STATE: {TurnInGromnusEye} ~~ {
	IF: ItemCountGE 1 {Gromnus Eye}
		DO: Chat {/ub give Gromnus Eye to Master of the Gauntlet}
	IF: ItemCountLE 0 {Gromnus Eye}
		DO: SetState {End}
	IF: SecsInStateGE 5
		DO: SetState {TurnInGromnusEye}
~~ }
STATE: {End} ~~ {
	IF:	Always 
		DO:	DoAll
				DoExpr {stopwatchstop[getvar[stopWatch]]}
				ChatExpr {\/f\ Gauntlet\ Bosses\  +cstr[floor[stopwatchelapsedseconds[getvar[stopWatch]]/60]]+\ Minutes\ +cstr[floor[stopwatchelapsedseconds[getvar[stopWatch]]%60]]+\ Seconds]}
				Chat {/ub myquests}
				Chat {/vt loot load DefaultLoot.utl}
	IF: All 
			SecsInStateGE 5
			Expr {testgvar[defaultMeta]==1}
		DO: ChatExpr {\/vt meta load +getgvar[defaultMeta]}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~

NAV: nav0 once ~~ {
	pnt -30.2857276598612 -16.6821353912354 2.08333134651184E-05
	pnt -30.2092753728231 -16.6892365773519 2.08333134651184E-05
	pnt -30.2089674631755 -16.7001549402873 2.08333134651184E-05
~~ }
NAV: nav1 once ~~ {
	pnt -30.4170516331991 -18.7433783272902 2.08333134651184E-05
~~ }
NAV: nav2 once ~~ {
	pnt -30.2792037010193 -16.6837772369385 2.08333134651184E-05
	pnt -30.2117804845174 -16.6809007962545 2.08333134651184E-05
	pnt -30.175153986613 -16.6808188756307 2.08333134651184E-05
	pnt -30.1655399958293 -16.6700518608093 2.08333134651184E-05
~~ }
NAV: nav3 once ~~ {
	pnt -30.4165338198344 -19.237760480245 2.08333134651184E-05
~~ }
NAV: nav4 once ~~ {
	pnt -30.346058400472 -16.6728219985962 2.08333134651184E-05
~~ }
NAV: nav5 once ~~ {
	pnt -30.2333292007446 -16.6831930796305 2.08333134651184E-05
	pnt -30.1908900578817 -16.682836151123 2.08333134651184E-05
	pnt -30.1532282511393 -16.6850201924642 2.08333134651184E-05
	pnt -30.1275401433309 -16.6867638587952 2.08333134651184E-05
	pnt -30.1240551630656 -16.6995784123739 2.08333134651184E-05
~~ }
NAV: nav6 once ~~ {
	pnt -30.7079377333323 -18.9885712782542 2.08333134651184E-05
~~ }
NAV: nav7 once ~~ {
	pnt -101.657279141744 -96.6906586329142 2.08333134651184E-05
~~ }
NAV: nav8 once ~~ {
	pnt -101.613241004944 -96.6465869903564 2.08333134651184E-05
	pnt -101.657922903697 -96.6921284039815 2.08333134651184E-05
~~ }
NAV: nav9 once ~~ {
	pnt -101.657663281759 -96.6933292071025 2.08333134651184E-05
~~ }
NAV: nav10 once ~~ {
	rcl -101.657922903697 -96.6921284039815 2.08333134651184E-05 {Primary Portal Recall}
~~ }
NAV: nav11 once ~~ {
	rcl -101.657922903697 -96.6921284039815 2.08333134651184E-05 {Secondary Portal Recall}
~~ }
NAV: nav12 once ~~ {
	pnt -101.702570788066 -96.6411827405294 2.08333134651184E-05
	pnt -101.656653499603 -96.6004966100057 2.08333134651184E-05
	pnt -101.656104024251 -96.5290795326233 2.08333134651184E-05
	pnt -101.708598248164 -96.5233652909597 2.08333134651184E-05
	pnt -101.708018096288 -96.4756525278091 2.08333134651184E-05
	pnt -101.714583444595 -96.4754054546356 2.08333134651184E-05
	ptl 49.7087587038676 26.2436337471008 2.08334376414617E-05 -101.727349996567 -96.4750416676203 -0.000262499845121056 14 {Portal to Cragstone}
	pnt 48.4474351247152 25.9764008839925 0.225020837783813
	pnt 48.6354490915934 26.0115901947021 0.194112650553385
	pnt 48.8030118942261 26.0272678375244 0.166185522079468
	pnt 49.024254099528 26.0479677200317 0.137645165125529
	pnt 49.1203004201253 26.0739871323109 0.113364887237549
	pnt 49.221887143453 26.1095053911209 0.0788075526555379
	pnt 49.2971786936124 26.1358297030131 0.0499535044034322
	pnt 49.3587341308594 26.1497780958811 0.0410890976587931
	pnt 49.425482749939 26.1691809813182 0.0322004377841949
	pnt 49.497530968984 26.1929393132528 0.026197616259257
	pnt 49.5609847068787 26.2051765759786 0.0232426802317301
	pnt 49.6171713829041 26.2160123507182 0.013989183306694
	pnt 49.6624151865641 26.228065888087 0.00240056042869886
	pnt 49.7087587038676 26.2436337471008 2.08334376414617E-05
	ptl 49.7087587038676 26.2436337471008 2.08334376414617E-05 49.7192958196004 26.2390962441762 -0.000262499845121056 14 {Eldrytch Web Gauntlet}
~~ }