~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/metaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

~~ test
STATE: {Default} ~~ {
	IF: Not Expr {getcharskill_traininglevel[39] >=2} ~~ Cooking trained/specialized
		DO: DoAll
				DoExpr {echo[Cooking not trained or specialized\!,15]}
				SetState {End}
	IF: ItemCountLE 0 {Brew Kettle}
		DO: DoAll
				DoExpr {echo[No Brew Kettle found, cannot make mead\!,15]}
				SetState {End}
	IF: All 
			ItemCountLE 0 {Life Infused Nightbloom}
			ItemCountLE 0 {Vigor Infused Nightbloom}
			ItemCountLE 0 {Mana Infused Nightbloom}
		DO: DoAll
				DoExpr {echo[No nightblooms found\!,15]}
				SetState {End}
	IF: ItemCountLE 0 {Amber Infused Honey}
		DO: DoAll
				DoExpr {echo[No amber infused honey found\!  Need 1 for every nightbloom,15]}
				SetState {End}
	IF: ItemCountLE 0 {Water}
		DO: DoAll
				DoExpr {echo[No water found\! Need 1 for every nightbloom,15]}
				SetState {End}
	IF: SecsInStateGE 2
		DO: DoAll
				DoExpr {setvar[nightbloomCount,getitemcountininventorybynamerx[`Infused Nightbloom`]]}
				DoExpr {setvar[honeyCount,getitemcountininventorybyname[`Amber Infused Honey`]]}
				DoExpr {setvar[waterCount,getitemcountininventorybyname[`Water`]]}
				SetState {CheckIngredientCounts}
~~ }
STATE: {CheckIngredientCounts} ~~ {
	IF: Expr {getvar[nightbloomCount]>getvar[honeyCount]||getvar[nightbloomCount]>getvar[waterCount]}
		DO: DoAll
				DoExpr {echo[More nightblooms \(+getvar[nightbloomCount]+\) than honey \(+getvar[honeyCount]+\) or water \(+getvar[waterCount]+\)\!,15]}
				SetState {End}
	IF: Expr {getvar[honeyCount]>getvar[nightbloomCount]||getvar[honeyCount]>getvar[waterCount]}
		DO: DoAll
				DoExpr {echo[More honey \(+getvar[honeyCount]+\) than nightblooms \(+getvar[nightbloomCount]+\) or water\(+getvar[waterCount]+\)\!,15]}
				SetState {End}
	IF: SecsInStateGE 2
		DO: SetState {Settings}
~~ }
STATE: {Settings} ~~ {
	IF:	Always
		DO:	DoAll
				Chat {/ub opt set VTank.PatchExpressionEngine True}
				Chat {/ub playeroption UseCraftSuccessDialog false}
				DoExpr {vtsetsetting[EnableBuffing,`0`]}
				DoExpr {vtsetsetting[EnableCombat,`0`]}
				DoExpr {vtsetsetting[EnableNav,`0`]}
				DoExpr {vtsetsetting[IdlePeaceMode,`1`]}
				DoExpr {vtsetsetting[AutoStack,`1`]}
				DoExpr {vtsetsetting[AutoCraftItems,`0`]}
				SetState {Begin}	
~~ }
STATE: {Begin} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {echo[Make Meads Meta by Sun Invictus,15]}
	IF: SecsInStateGE 2
		DO: SetState {CheckNightbloomCounts}
~~ }
STATE: {CheckNightbloomCounts} ~~ {
	IF: All
			ItemCountGE 1 {Life Infused Nightbloom}
			SecsInStateGE 2
		DO: CallState {MakeLifeMead} {CheckNightbloomCounts}
	IF: All
			ItemCountGE 1 {Vigor Infused Nightbloom}
			SecsInStateGE 2
		DO: CallState {MakeStaminaMead} {CheckNightbloomCounts}
	IF: All 
			ItemCountGE 1 {Mana Infused Nightbloom}
			SecsInStateGE 2
		DO: CallState {MakeManaMead} {CheckNightbloomCounts}
	IF: SecsInStateGE 10
		DO: SetState {End}
~~ }
STATE: {MakeLifeMead} ~~ {
	IF: All
			ItemCountGE 1 {Brew Kettle}
			ItemCountLE 0 {Full Brew Kettle}
			ItemCountLE 0 {Full Amber Infused Brew Kettle}
		DO: CallState {MakeFullBrewKettle} {MakeLifeMead}
	IF: ItemCountGE 1 {Full Brew Kettle}
		DO: CallState {MakeFullAmberInfusedBrewKettle} {MakeLifeMead}
	IF: ItemCountGE 1 {Full Amber Infused Brew Kettle}
		DO: DoAll
				DoExpr {actiontryapplyitem[wobjectfindininventorybyname[Life Infused Nightbloom], wobjectfindininventorybyname[Full Amber Infused Brew Kettle]]}
				Return
~~ }
STATE: {MakeStaminaMead} ~~ {
	IF: All
			ItemCountGE 1 {Brew Kettle}
			ItemCountLE 0 {Full Brew Kettle}
			ItemCountLE 0 {Full Amber Infused Brew Kettle}
		DO: CallState {MakeFullBrewKettle} {MakeStaminaMead}
	IF: ItemCountGE 1 {Full Brew Kettle}
		DO: CallState {MakeFullAmberInfusedBrewKettle} {MakeStaminaMead}
	IF: ItemCountGE 1 {Full Amber Infused Brew Kettle}
		DO: DoAll
				DoExpr {actiontryapplyitem[wobjectfindininventorybyname[Vigor Infused Nightbloom], wobjectfindininventorybyname[Full Amber Infused Brew Kettle]]}
				Return
~~ }
STATE: {MakeManaMead} ~~ {
	IF: All
			ItemCountGE 1 {Brew Kettle}
			ItemCountLE 0 {Full Brew Kettle}
			ItemCountLE 0 {Full Amber Infused Brew Kettle}
		DO: CallState {MakeFullBrewKettle} {MakeManaMead}
	IF: ItemCountGE 1 {Full Brew Kettle}
		DO: CallState {MakeFullAmberInfusedBrewKettle} {MakeManaMead}
	IF: ItemCountGE 1 {Full Amber Infused Brew Kettle}
		DO: DoAll
				DoExpr {actiontryapplyitem[wobjectfindininventorybyname[Mana Infused Nightbloom], wobjectfindininventorybyname[Full Amber Infused Brew Kettle]]}
				Return
~~ }
STATE: {MakeFullBrewKettle} ~~ {
	IF:	All
			ItemCountGE 1 {Water}
			ItemCountGE 1 {Brew Kettle}
		DO:	DoExpr {actiontryapplyitem[wobjectfindininventorybyname[Brew Kettle], wobjectfindininventorybyname[Water]]}
	IF:	Any
			ItemCountLE 0 {Water}
			ItemCountGE 1 {Full Brew Kettle}
		DO:	Return
	IF: SecsInStateGE 10
		DO: SetState {MakeFullBrewKettle}
~~ }
STATE: {MakeFullAmberInfusedBrewKettle} ~~ {
	IF:	All
			ItemCountGE 1 {Amber Infused Honey}
			ItemCountGE 1 {Full Brew Kettle}
		DO:	DoExpr {actiontryapplyitem[wobjectfindininventorybyname[Amber Infused Honey], wobjectfindininventorybyname[Full Brew Kettle]]}
	IF:	Any
			ItemCountLE 0 {Amber Infused Honey}
			ItemCountGE 1 {Full Amber Infused Brew Kettle}
		DO:	Return
	IF: SecsInStateGE 10
		DO: SetState {MakeFullAmberInfusedBrewKettle}
~~ }
STATE: {End} ~~ {
	IF: All 
			SecsInStateGE 5
			Expr {testgvar[defaultMeta]==1}
		DO: ChatExpr {\/vt meta load +getgvar[defaultMeta]}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~

