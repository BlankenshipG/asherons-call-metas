~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/metaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

~~ test
STATE: {Default} ~~ {
	IF: ItemCountLE 1 {Trade Note (250,000)}
		DO: DoAll
				DoExpr {echo[Need at least 2 MMDs to exchange rares\!,15]}
				SetState {End}
	IF: Always
		DO: SetState {Settings}
~~ }
STATE: {Settings} ~~ {
	IF:	Always
		DO:	DoAll
				Chat {/ub opt set VTank.PatchExpressionEngine True}
				DoExpr {setvar[exchangeList,listcreate[`Adherent's Crystal`,`Alchemist's Crystal`,`Artificer's Crystal`,`Pearl of Pierce Baning`,`Pearl of Bludgeon Baning`,`Pearl of Blade Baning`,`Pearl of Acid Baning`,`Pearl of Flame Baning`,`Pearl of Lightning Baning`,`Pearl of Frost Baning`,`Ben ten's Crystal`,`Berzerker's Crystal`,`Brawler's Crystal`,`Converter's Crystal`,`Corruptor's Crystal`,`Deceiver's Crystal`,`Fletcher's Crystal`,`Hunter's Crystal`,`Physician's Crystal`,`Oswald's Crystal`,`Zefir's Crystal`,`Warrior's Crystal`,`Rogue's Crystal`,`Knight's Crystal`,`Thorsten's Crystal`,`Pearl of Swift Killing`,`Mage's Jewel`,`Adherent's Crystal`,`Melee's Jewel`,`Elysa's Crystal`,`Pearl of Hermetic Linking`,`T'ing's Crystal`,`Hieromancer's Crystal`,`Life Giver's Crystal`,`Enchanter's Crystal`,`Monarch's Crystal`,`Observer's Crystal`,`Tinker's Crystal`,`Lich's Pearl`,`Pearl of Blood Drinking`,`Chef's Crystal`,`Tusker's Jewel`,`Olthoi's Jewel`,`Executor's Jewel`,`Pearl of Impenetrability`,`Pearl of Defending`,`Gelid's Jewel`,`Pearl of Heart Seeking`,`Duelist's Jewel`,`Warrior's Jewel`,`Ben Ten's Crystal`,`Pearl of Spirit Drinking`]]}
				~~ Non-Exchange (Keep) List 
				~~ Smith's Crystal (Armor Tinkering)
				~~ Imbuer's Crystal (Magic Item Tinkering)
				~~ Artist's Crystal (Weapon Tinkering)a
				~~ Lugian's Pearl (Strength for Weapon Tinkering)
				~~ Sprinter's Pearl (Quickness for Missile D)
				~~ Magus's Pearl (Focus for Tinkering/Arcane Lore)
				~~ Ursuin's Pearl (Endurance for Armor Tinkering)
				~~ Wayfarer's Pearl (Coordination for Missile D)
				~~ Archer's Jewel (Pierce Protection for HMD, Empyrean Rescue)
				~~ Inferno's Jewel (Fire Protection for Mhoire Castle)
				~~ Scholar's Crystal (Arcane Lore)
				~~ Dodger's Crystal (Missile D)
				~~ Resister's Crystal (Magic D) HMD?
				~~ Evader's Crystal (Melee D) HMD?
				~~ Vaulter's Crystal (Jump) VR Tree
				~~ Astyrrian's Jewel (Hive Queen)
				~~ Thief's Crystal (Hive Queen)
				SetState {Begin}	
~~ }
STATE: {Begin} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {echo[Rare Exchange Meta by Sun Invictus,15]}
				DoExpr {echo[Assumes character is near Rare Exchanger,15]}
				DoExpr {echo[Assumes player is familiar with configured exchange list in meta,15]}
				SetState {CheckInventoryForRaresToExchange}
~~ }
STATE: {CheckInventoryForRaresToExchange} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {setvar[inventory,listmap[wobjectfindallinventory[],`wobjectgetname[$1]`]]}
				DoExpr {setvar[raresToExchange,listreduce[$exchangeList,`$2+listcontains[$inventory,$1]`]]}
	IF: Expr {$raresToExchange>0}
		DO: DoAll
				DoExpr {setvar[iterateList,listcopy[$exchangeList]]}
				SetState {ProcessNextRare}
	IF: Expr {$raresToExchange<=0}
		DO: SetState {End}
~~ }
STATE: {ProcessNextRare} ~~ {
	IF: Expr {listcount[$iterateList]>0}
		DO: DoAll
				DoExpr {setvar[nextRare,listpop[$iterateList]]}
				SetState {ExchangeRare}
	IF: Expr {listcount[$iterateList]<=0}
		DO: SetState {CheckInventoryForRaresToExchange}
~~ }
STATE: {ExchangeRare} ~~ {
	IF: ItemCountLE 1 {Trade Note (250,000)}
		DO: DoAll
				DoExpr {echo[Out of MMDs,15]}
				SetState {End}
	IF: Expr {listcount[wobjectfindallinventorybynamerx[$nextRare]]<=0}
		DO: SetState {ProcessNextRare}
	IF: All 
			Expr {listcount[wobjectfindallinventorybynamerx[$nextRare]]>0}
			SecsInStateGE 1
		DO: ChatExpr {`/mt give Trade Note (250,000) to Rare Exchanger`}
	IF: Any 
			ChatMatch {You hand over 2}
			ChatMatch {You've already paid}
		DO: ChatExpr {`/ub give 1 ` +$nextRare+ ` to Rare Exchanger`}
	IF: ChatMatch {Rare Exchanger gives you}
		DO: SetState {ExchangeRare}
	IF: SecsInStateGE 10
		DO: SetState {ExchangeRare}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~

