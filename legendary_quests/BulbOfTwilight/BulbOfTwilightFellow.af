~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~																						
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.	
~~		Get metaf here: https://github.com/JJEII/metaf/									
~~																						
~~ All recognized structural designators:												
~~		STATE:				DO:															
~~		IF:					NAV:														
~~																						
~~ All recognized CONDITION (IF:) operation keywords:									
~~		Never				NavEmpty			MobsInDist_Priority		Not				
~~		Always				Death				NeedToBuff				PSecsInStateGE	
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE	
~~		Any					VendorClosed		BlockE					BuPercentGE		
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE		
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr			
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture		
~~																						
~~ All recognized ACTION (DO:) operation keywords:										
~~		None				EmbedNav			ChatExpr				SetOpt			
~~		SetState			CallState			SetWatchdog				CreateView		
~~		Chat				Return				ClearWatchdog			DestroyView		
~~		DoAll				DoExpr				GetOpt					DestroyAllViews	
~~																						
~~ All recognized NAV types:															
~~		circular			follow														
~~		linear				once														
~~																						
~~ All recognized NAV NODE types:														
~~		flw					vnd															
~~		pnt					ptl															
~~		rcl					tlk															
~~		pau					chk															
~~		cht					jmp															
~~		prt (deprecated in VTank)														
~~ }																					

STATE: {Default} ~~ {
	IF: Expr {getfellowshipstatus[]==0}
		DO: DoAll
				DoExpr {echo[Not in a fellowship\!,15]}
				SetState {WaitingForFellowship}
	IF: Expr {getqueststatus[none]==0} 
		DO: DoAll
				DoExpr {echo[Second Sister aka Bulb of Harvests timer not up\!,15]}
				SetState {End}
	IF: Expr {testquestflag[bulboftwilight_flag]==0}
		DO: DoAll
				DoExpr {echo[Have not completed Second Sister Bulb of Harvests Quest\!,15]}
				SetState {End}
	IF:	All
			Expr {getfellowshipstatus[]!=0}
			Expr {getqueststatus[none]!=0}
			Expr {testquestflag[bulboftwilight_flag]==1}
		DO:	SetState {Settings}		
~~ }
STATE: {WaitingForFellowship} ~~ {
	IF: Expr {getfellowshipstatus[]==1}
		DO: SetState {Default}
~~ } 
STATE: {Settings} ~~ {
	IF:	Always
		DO:	DoAll
				Chat {/ub opt set VTank.PatchExpressionEngine True}
				DoExpr {vtsetsetting[NavCloseStopRange,`0.00625`]} ~~ 1.5
				DoExpr {vtsetsetting[NavPriorityBoost,`0`]}
				DoExpr {vtsetsetting[EnableBuffing,`1`]}
				DoExpr {vtsetsetting[EnableCombat,`1`]}
				DoExpr {vtsetsetting[EnableNav,`1`]}
				DoExpr {vtsetsetting[IdlePeaceMode,`1`]}
				DoExpr {vtsetsetting[EnableLooting,`1`]}
				DoExpr {vtsetsetting[StopMacroOnDeath,`0`]}
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`0`]} ~~ looting on for pulsating spirit-trap gem
				DoExpr {uboptset[`VTank.FixPortalLoops`,True]}
				DoExpr {uboptset[`VTank.VitalSharing`,True]}
				DoExpr {uboptset[`Looter.Enabled`,True]}
				DoExpr {uboptset[`Looter.EnableChests`,True]}
				DoExpr {uboptset[`Looter.AutoSalvageAfterLooting`,True]}	
				DoExpr {vtsetsetting[UseDispelItems,`1`]}
				DoExpr {vtsetsetting[AutoAttackPower,`1`]}
				DoExpr {vtsetsetting[BlacklistMonsterTimeoutSeconds,`30`]}
				DoExpr {vtsetsetting[Recharge-Norm-Hitp,`70`]}
				DoExpr {vtsetsetting[Recharge-Norm-Stam,`5`]}
				DoExpr {vtsetsetting[Recharge-Norm-Mana,`15`]}
				DoExpr {vtsetsetting[Recharge-Notarg-Hitp,`0`]}
				DoExpr {vtsetsetting[Recharge-Notarg-Stam,`0`]}
				DoExpr {vtsetsetting[Recharge-Notarg-Mana,`50`]}
				DoExpr {vtsetsetting[OpenDoors,`1`]} 
				DoExpr {vtsetsetting[SummonPets,`1`]}
				DoExpr {vtsetsetting[PetRangeMode,`1`]}
				DoExpr {vtsetsetting[PetCustomRange,`0.0625`]} ~~ 15
				DoExpr {vtsetsetting[AttackDistance,`0.01666`]} ~~ 4
				DoExpr {vtsetsetting[ApproachDistance,`0.0208333`]} ~~ 5	
				DoExpr {setvar[buffedJumpSkill,getcharskill_buffed[22]]}
				~~ 525 jump is baseline jump skill for jump parameters, store adjustments accordingly
				DoExpr {setvar[jumpPowerDiff,getvar[buffedJumpSkill]-525]}
				Chat {/vt loot load BulbOfTwilight.utl}
	IF: ItemCountGE 1 {Egg}
		DO: DoAll
				DoExpr {setgvar[currentLeader,wobjectgetname[wobjectgetplayer[]]]} ~~ set leader variable
				DoExpr {setgvar[fellowCounter,0]}
	IF: SecsInStateGE 3
		DO: SetState {Begin}				
~~ }
STATE: {Begin} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {echo[Third Sister aka Bulb of Twilight Meta by Sun Invictus,15]}
				DoExpr {echo[Expects VTank Monster tab to be configured for quest,15]}
				DoExpr {echo[Expects one character to be leader and have an egg,15]}
				DoExpr {echo[Uses dispel gems,15]}
	IF: All 
			Not NeedToBuff
			SecsInStateGE 5
		DO: DoAll
				DoExpr {setvar[stopWatch,stopwatchstart[stopwatchcreate[]]]}
				DoExpr {vtsetsetting[EnableBuffing,`0`]}
				CallState {CheckForTownNetworkDrop} {NavigatingToNorus}
~~ }
STATE: {CheckForTownNetworkDrop} ~~ {
	IF: CellE 00070145 ~~ Annex TN drop
		DO: Return
	IF: CellE 00070133 ~~ Gharu'ndim TN drop
		DO: SetState {NavigatingFromGharuToAnnexDrop}
	IF: CellE 00070143 ~~ Aluvian TN drop
		DO: SetState {NavigatingFromAluvianToAnnexDrop}
	IF: CellE 00070156 ~~ Sho TN drop
		DO: SetState {NavigatingFromShoToAnnexDrop}
	IF: All
			Not CellE 00070145
			Not CellE 00070133
			Not CellE 00070143
			Not CellE 00070156
		DO: SetState {AttemptPrimaryRecallToTownNetwork}
~~ }
STATE: {NavigatingFromGharuToAnnexDrop} ~~ {
	IF: Always
		DO: EmbedNav nav1 {TNGharuToAnnex.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckForTownNetworkDrop}
~~ }
STATE: {NavigatingFromAluvianToAnnexDrop} ~~ {
	IF: Always
		DO: EmbedNav nav2 {TNAluvianToAnnex.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckForTownNetworkDrop}
~~ }
STATE: {NavigatingFromShoToAnnexDrop} ~~ {
	IF: Always
		DO: EmbedNav nav3 {TNShoToAnnex.nav}
	IF: All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckForTownNetworkDrop}
~~ }
STATE: {AttemptPrimaryRecallToTownNetwork} ~~ {
	IF: Always
		DO: EmbedNav nav4 {PrimaryRecall.nav}
	IF: All
			ExitPortal
			BlockE 00070000
		DO: SetState {CheckForTownNetworkDrop}
	IF: All
			ExitPortal
			Not BlockE 00070000
		DO: SetState {AttemptSecondaryRecallToTownNetwork}
~~ }
STATE: {AttemptSecondaryRecallToTownNetwork} ~~ {
	IF: Always
		DO: EmbedNav nav5 {SecondaryRecall.nav}
	IF: All
			ExitPortal
			BlockE 00070000
		DO: SetState {CheckForTownNetworkDrop}
	IF: All
			ExitPortal
			Not BlockE 00070000
		DO: DoAll
				DoExpr {echo[Could not get to Town Network via recalls\! Aborting,15]}
				SetState {CouldNotReachTownNetwork}
~~ }
STATE: {NavigatingToNorus} ~~ {
	IF: Always
		DO: EmbedNav nav0 {TownNetworkToNorus.nav}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {TalkToNorus}
~~ }
STATE: {TalkToNorus} ~~ {
	IF: Always
		DO: Chat {/ub use Norus}
	IF:	SecsInStateGE 5
		DO:	SetState {TalkToNorus}
	IF: Any
			ChatMatch {still packed full of invaders} 
			ChatMatch {heal the Prince and those afflicted by the Book}
		DO: SetState {NavigatingToMagmaJumpRoom}
~~ }
STATE: {NavigatingToMagmaJumpRoom} ~~ {
	IF: Always
		DO: EmbedNav nav6 {NorusToMagmaJumpRoom.nav}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO:	DoAll
				DoExpr {vtsetsetting[EnableCombat,`0`]}
				SetState {MagmaRoomBigJump}
~~ }
STATE: {MagmaRoomBigJump} ~~ {
	IF: Always
		DO: Chat {/ub jumpw 180 200} ~~ same for everyone
	IF: SecsInStateGE 5
		DO: SetState {MagmaRoomShiftJumpPositioning}
~~ }
STATE: {MagmaRoomShiftJumpPositioning} ~~ {
	IF: Always
		DO: EmbedNav nav7 {MagmaJumpPositioning.nav}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO:	SetState {MagmaJumpRoomShiftJump}
~~ }
STATE: {MagmaJumpRoomShiftJump} ~~ {
	IF: Always
		DO: ChatExpr {\/ub jumpsw 180 +cstr[750-getvar[jumpPowerDiff]]}
	IF: SecsInStateGE 5
		DO: DoAll
				DoExpr {vtsetsetting[EnableCombat,`1`]}
				CallState {FellowshipRoleCall} {NavigatingToSanctumGuardianSpiritLootingGems}
~~ }
STATE: {NavigatingToSanctumGuardianSpiritLootingGems} ~~ {
	IF: Always
		DO: EmbedNav nav8 {NorusToSanctumGuardianSpirit.nav}
	IF: ItemCountGE 1 {Pulsating Spirit-trap Gem}
		DO: DoAll
				DoExpr {vtsetsetting[LootOnlyRareCorpses,`1`]}
				Chat {/f I have my Pulsating Spirit-trap Gem}
				SetState {NavigatingToSanctumGuardianSpiritHaveGem}
~~ }
STATE: {NavigatingToSanctumGuardianSpiritHaveGem} ~~ {
	IF: Expr {(getgvar[fellowCounter]%getfellowshipcount[])==listindexof[getfellownames[],wobjectgetname[wobjectgetplayer[]]]}
		DO: DoExpr {setgvar[fellowCounter,getgvar[fellowCounter]+1]}	
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO:	CallState {WaitForFellowship} {GiveGemToSanctumGuardianSpirit}
~~ }
STATE: {WaitForFellowship} ~~ {
	IF: Expr {getgvar[fellowCounter]%getfellowshipcount[]==0}
		DO: Return
~~ }
STATE: {FellowshipRoleCall} ~~ {
	IF: Expr {(getgvar[fellowCounter]%getfellowshipcount[])==listindexof[getfellownames[],wobjectgetname[wobjectgetplayer[]]]}
		DO: DoAll
				DoExpr {setgvar[fellowCounter,getgvar[fellowCounter]+1]}
				SetState {WaitForFellowship}	
~~ }
STATE: {GiveGemToSanctumGuardianSpirit} ~~ {
	IF: Always
		DO: Chat {/ub give Pulsating Spirit-trap Gem to Sanctum Guardian Spirit}
	IF: IntoPortal
		DO: CallState {FellowshipRoleCall} {NavigatingToOreCollection}
	IF:	SecsInStateGE 5
		DO:	SetState {GiveGemToSanctumGuardianSpirit}
~~ }
STATE: {NavigatingToOreCollection} ~~ {
	IF: Always
		DO: EmbedNav nav7 {TwilightToOreCollectionStart.nav}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: DoAll
				EmbedNav nav8 {TwilightOreCollectionLap.nav}
				SetState {OreCollectionLap}
~~ }
STATE: {OreCollectionLap} ~~ {
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: DoAll
				EmbedNav nav8 {TwilightVineCollectionLap.nav}
				SetState {OreCollectionLap}
	~~ this will throw errors if no ore are present anywhere nearby?
	IF: All
			Expr {getobjectinternaltype[wobjectfindnearestbytemplatetype[47198]]==7} ~~ TODO need template for ore!
			Expr {coordinatedistancewithz[getplayercoordinates[], wobjectgetphysicscoordinates[wobjectfindnearestbytemplatetype[47198]]]<10}
		DO: SetState {AttemptToCollectOre}			
~~ }
STATE: {AttemptToCollectOre} ~~ {
	IF: Always
		DO: DoAll
				DoExpr {vtsetsetting[EnableNav,`0`]}
				Chat {/ub usel Alb'arean Ore}
	IF:	ItemCountGE 15 {Alb'arean Ore}
		DO: DoAll
				Chat {/f I have 15 Alb'arean Ore}
				DoExpr {vtsetsetting[EnableNav,`1`]}
				SetState {FellowshipRoleCallFinish}
	IF: SecsInStateGE 5
		DO: DoAll
				DoExpr {vtsetsetting[EnableNav,`1`]}
				SetState {OreCollectionLap}
~~ }
STATE: {FellowshipRoleCallFinish} ~~ {
	~~ update the shared fellow variable to indicate character is done collecting
	~~ likely will remain in this state for a while while others collect
	IF: Expr {(getgvar[fellowCounter]%getfellowshipcount[])==listindexof[getfellownames[],wobjectgetname[wobjectgetplayer[]]]}
		DO: DoAll
				DoExpr {setgvar[fellowCounter,getgvar[fellowCounter]+1]}
				SetState {WaitingForFellowshipLap}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: DoAll
				EmbedNav nav8 {TwilightOreCollectionLap.nav}
				SetState {FellowshipRoleCallFinish}
~~ }
STATE: {WaitingForFellowshipLap} ~~ {
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {CheckIfFellowHasEnoughOre}		
~~ }
STATE: {CheckIfFellowHasEnoughOre} ~~ {
	IF: Expr {getgvar[fellowCounter]%getfellowshipcount[]==0}
		DO: CallState {FellowshipRoleCall} {NavigatingToBulbOfTwilight}
	IF: Expr {getgvar[fellowCounter]%getfellowshipcount[]!=0}
		DO: DoAll
				EmbedNav nav8 {TwilightOreCollectionLap.nav}
				SetState {WaitingForFellowshipLap}
~~ }
STATE: {NavigatingToBulbOfTwilight} ~~ {
	IF: Always
		DO: EmbedNav nav9 {TwilightToBulb.nav}
	IF: All
			NavEmpty
			SecsInStateGE 5
		DO: SetState {TalkToBulbOfTwilight}
~~ }
STATE: {TalkToBulbOfTwilight} ~~ {
	IF: Always
		DO: Chat {/ub use Bulb of Twilight}
	IF: ItemCountGE 1 {Seed of Essence}
		DO: CallState {CheckForTownNetworkDrop} {NavigatingToNorusFinish}
	IF: SecsInStateGE 10 
		DO: SetState {TalkToBulbOfTwilight}
~~ }
STATE: {NavigatingToNorusFinish} ~~ {
	IF: Always
		DO: EmbedNav nav0 {TownNetworkToNorus.nav}
	IF:	All
			NavEmpty
			SecsInStateGE 3
		DO: SetState {NavigatingToAdrenkusFinish}
~~ }
STATE: {GiveSeedToNorus} ~~ {
	IF: Always
		DO: Chat {/ub give Seed of Essence to Norus}
	IF:	SecsInStateGE 5
		DO:	SetState {GiveSeedToNorus}
	IF: ChatMatch {Norus gives you}
		DO: SetState {NavigatingToWeaponChest}
~~ }
STATE: {NavigatingToWeaponChest} ~~{
	IF: Always
		DO: EmbedNav nav10 {NeftetTreasuryDropToWeaponChest.nav}
	IF: All 
			NavEmpty
			SecsInStateGE 3
		DO: DoAll
				Chat {/vt loot load DefaultLoot.utl}
				SetState {LootChest}
~~ }
STATE: {LootChest} ~~ {
	IF:	Expr {getobjectinternaltype[wobjectfindininventorybynamerx[\^Legendary Key\$]]==7}
		DO:	DoAll
				Chat {/ub use Legendary Key on Legendary Weapon Chest}
				Chat {/ub use Legendary Weapon Chest}
	IF: SecsInStateGE 5
		DO: SetState {CheckKeys}
~~ }
STATE: {CheckKeys} ~~ {
	IF: Expr {getobjectinternaltype[wobjectfindininventorybynamerx[\^Legendary Key\$]]==7}
		DO: SetState {LootChest}
	IF: Not Expr {getobjectinternaltype[wobjectfindininventorybynamerx[\^Legendary Key\$]]==7}
		DO: SetState {End}
~~ }
STATE: {End} ~~ {
	IF:	Always 
		DO:	DoAll
				DoExpr {stopwatchstop[getvar[stopWatch]]}
				ChatExpr {\/f Bulb\ of\ Twilight\ +cstr[floor[stopwatchelapsedseconds[getvar[stopWatch]]/60]]+\ Minutes\ +cstr[floor[stopwatchelapsedseconds[getvar[stopWatch]]%60]]+\ Seconds]}
				Chat {/ub myquests}
	IF: All 
			SecsInStateGE 5
			Expr {testgvar[defaultMeta]==1}
		DO: ChatExpr {\/vt meta load +getgvar[defaultMeta]}
~~ }

~~========================= ONLY NAVS APPEAR BELOW THIS LINE =========================~~


NAV: nav1 once ~~ {
	pnt -101.657279141744 -96.6906586329142 2.08333134651184E-05
~~ }
NAV: nav2 once ~~ {
	pnt -101.613241004944 -96.6465869903564 2.08333134651184E-05
	pnt -101.657922903697 -96.6921284039815 2.08333134651184E-05
~~ }
NAV: nav3 once ~~ {
	pnt -101.657663281759 -96.6933292071025 2.08333134651184E-05
~~ }
NAV: nav4 once ~~ {
	rcl -101.657922903697 -96.6921284039815 2.08333134651184E-05 {Primary Portal Recall}
~~ }
NAV: nav5 once ~~ {
	rcl -101.657922903697 -96.6921284039815 2.08333134651184E-05 {Secondary Portal Recall}
~~ }

NAV: nav10 once ~~ {
	pnt -20.6682699839274 -41.8584663391113 2.08333134651184E-05
	pnt -20.6549720128377 -41.8187646865845 2.08333134651184E-05
	pnt -20.6496522585551 -41.7902118682861 2.08333134651184E-05
	pnt -20.6489892641703 -41.7775894165039 0.00243384391069412
~~ }

